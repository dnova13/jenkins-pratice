pipeline {
    agent any

    environment {
        // 환경 변수 설정
        DOCKER_IMAGE = 'mydockerimage'  // 빌드할 Docker 이미지의 이름
    }

    stages {
        stage('Checkout') {
            steps {
                // GitHub에서 프로젝트를 클론
                git branch: 'main', url: 'https://github.com/your-username/your-repo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                // Docker 이미지를 빌드
                script {
                    docker.build("${DOCKER_IMAGE}")
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                // Docker 컨테이너를 실행
                script {
                    sh 'docker run -d --name mycontainer ${DOCKER_IMAGE}'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                // Docker 이미지를 Docker Hub에 푸시
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials-id') {
                        docker.image("${DOCKER_IMAGE}").push("latest")
                    }
                }
            }
        }

        stage('Clean Up') {
            steps {
                // Docker 컨테이너와 이미지를 로컬에서 제거
                sh '''
                    docker stop mycontainer
                    docker rm mycontainer
                    docker rmi ${DOCKER_IMAGE}:latest
                '''
            }
        }
    }

    post {
        always {
            // 빌드가 끝난 후 클린업 작업
            cleanWs()
        }
    }
}
